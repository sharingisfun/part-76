{"title":"DAS #79: PRIMITIVE OBSESSION","uid":7831450,"size":163557414,"categoryP":"video","categoryS":"other","magnet":"?xt=urn:btih:34e346696cd8bb33f02e0106c3634b98972b2b92&amp;dn=DAS+%2379%3A+PRIMITIVE+OBSESSION&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":0,"uploader":"splehpneb","files":1,"time":1353066521,"description":"Primitive obsession is the use of primitive valuesÃ¢â‚¬â€integers, strings, arrays, hashes, etc.Ã¢â‚¬â€when a more specialized, domain-relevant object would provide a better design. Rather than discuss the idea abstractly, this screencast is a concrete example: we examine Destroy All Software's Screencast class, then replace it throughout the system with a simple hash. At the end, we review the changes to get a sense of what primitive obsession does to a design.\n\nNote: As mentioned in the screencast, no tests are run or touched. At over 15 minutes long, this screencast is well on the high end of DAS lengths and test maintenance would've increased that. As a result, at least one mistake is made: the Screencast.slug method should've taken a screencast and computed the slug from it. This doesn't impact the design analysis, but certainly reaffirms the importance of testing.\n","torrent":{"xt":"urn:btih:34e346696cd8bb33f02e0106c3634b98972b2b92","amp;dn":"DAS+%2379%3A+PRIMITIVE+OBSESSION","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"34e346696cd8bb33f02e0106c3634b98972b2b92","infoHashBuffer":{"type":"Buffer","data":[52,227,70,105,108,216,187,51,240,46,1,6,195,99,75,152,151,43,43,146]},"announce":[],"urlList":[]}}