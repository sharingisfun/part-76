{"title":"RailsCast #137 - Memoization (revised)","uid":7819296,"size":14436207,"categoryP":"video","categoryS":"other","magnet":"?xt=urn:btih:26b1b1d538e86bee9d5db5c8dcc90a73af197b34&amp;dn=RailsCast+%23137+-+Memoization+%28revised%29&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":0,"uploader":"splehpneb","files":1,"time":1352755549,"description":"Memoization is a convenient way to cache a method's response. Here I show several ways to accomplish this from scratch since the ActiveSupport::Memoizable module has been deprecated. (9 minutes) If you found this helpful, please consider purchasing RailsCasts Pro.","torrent":{"xt":"urn:btih:26b1b1d538e86bee9d5db5c8dcc90a73af197b34","amp;dn":"RailsCast+%23137+-+Memoization+%28revised%29","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"26b1b1d538e86bee9d5db5c8dcc90a73af197b34","infoHashBuffer":{"type":"Buffer","data":[38,177,177,213,56,232,107,238,157,93,181,200,220,201,10,115,175,25,123,52]},"announce":[],"urlList":[]}}